const player = "p";
const wall = "w";
const floor = ".";
const clue = "c";
const trap = "t";
const door = "d";
const key = "k";

// Define tile graphics using Sprig's basic syntax
setLegend(
  [player, bitmap`
....0000....
...022220...
..02222220..
..22022220..
..22022220..
..02222220..
...022220...
....0000....
....0000....
...022220...
..02222220..
..22022220..
..22022220..
..02222220..
...022220...
....0000....`],
  [wall, bitmap`
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL`],
  [floor, bitmap`
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................`],
  [clue, bitmap`
................
................
....666666......
...66666666.....
..6666666666....
..6666..6666....
...66666666.....
....666666......
.....6666.......
.....6666.......
....666666......
...66666666.....
...66666666.....
....666666......
................
................`],
  [trap, bitmap`
................
................
..RR..RR..RR..RR
.RR..RR..RR..RR.
..RR..RR..RR..RR
.RR..RR..RR..RR.
..RR..RR..RR..RR
.RR..RR..RR..RR.
..RR..RR..RR..RR
.RR..RR..RR..RR.
..RR..RR..RR..RR
.RR..RR..RR..RR.
..RR..RR..RR..RR
.RR..RR..RR..RR.
................
................`],
  [door, bitmap`
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLL........LLLLL
LLL........LLLLL
LLL........LLLLL
LLL........LLLLL
LLL........LLLLL
LLL........LLLLL
LLL........LLLLL
LLL........LLLLL
LLL........LLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL`],
  [key, bitmap`
................
................
......L.........
.....L..........
....L...........
....LLLLLL......
...L....LL......
..L....L........
..LLLLLLLL......
.....LL.L.......
.....LL.L.......
.....LLLLL......
................
................
................
................`]


);
setMap(map);
setSolids([player, wall]);

// Player movement
onInput("w", () => {
  getFirst(player).y -= 1;
});

onInput("s", () => {
  getFirst(player).y += 1;
});

onInput("a", () => {
  getFirst(player).x -= 1;
});

onInput("d", () => {
  getFirst(player).x += 1;
});
// Simple map for demonstration
const map = map`
wwwwwwwwww
w....p...w
w.ww.ww.ww
w...c....w
ww.ww.ww.w
w........w
w.wwwwww.w
w......k.w
wwwwwwwwdw`;
// Collision detection for collecting clues and traps
onCollision(player, clue, (p, c) => {
  removeSprite(c);
  addText("Clue Collected!", { y: 4, color: color`4` });
});

onCollision(player, trap, (p, t) => {
  addText("You fell into a trap!", { y: 4, color: color`3` });
  // You could add code to reset the player's position or reduce health
});

// Collision with door
onCollision(player, door, (p, d) => {
  if (tilesWith(player, key).length === 1) {
    addText("Door unlocked!", { y: 4, color: color`5` });
    removeSprite(d);
  } else {
    addText("Find the key!", { y: 4, color: color`2` });
  }
});

// Collision with key
onCollision(player, key, (p, k) => {
  removeSprite(k);
  addText("Key Collected!", { y: 4, color: color`6` });
});